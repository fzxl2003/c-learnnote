/*
字符串
1.定义：以'\0'结束的字符序列
2.组成：字符串中只包含可见字符、空白字符、转义字符
3.字符串表示方法：
 1：字符数组， char s1[64];
 2：字符串常量，如"Hello, world"
 3：字符型指针，如char *s2;




3.以常量形式出现的字符串必须由一对双引号引起来（'\0'隐含在末尾，无需写出）
4.字符串长度不含有'\0'
5.空串 ""  只含有'\0'的字符串
6.char *a="hello world";   //这里的a是指针变量，它指向字符串的第0个字符，a可以被更改，如a++就可以指向字符串的第1个字符
  char a="hello world";    //该定义方法完全错误
6.


常量字符串
1.特性：当代码中出现""的字符串常量，编译时会在静态区保存该字符串，调用时使用其指针
2.char *s2="123"              s2的数据为1所对应的指针
  char a[ ] = "Hello,world"   a的数据从字符串常量中拷贝，a对应自身a[0]的指针

字符数组
1.字符数组定义与初始化：
  (1) 显式定义字符串长度，char s1[64];
  (2) 隐式定义字符串长度，char a[ ] = "Hello,world";
      数组长度由编译器根据字符串中实际字符个数确定，共11个字符 ，结尾隐藏'\0' ，
      实际长度12，等价于char a[ ] = { 'H', 'e', 'l', 'l', 'o', ',' , 'w', 'o', 'r', 'l', 'd', '\0' };
  初始化时可以用"Hello,world"或{ 'H', 'e', 'l', 'l', 'o', ',' , 'w', 'o', 'r', 'l', 'd', '\0' }
  只用初始化时可以整体赋值，其他时候只能循环单个赋值
2.字符数组的访问：与数组完全一致
5.例6-18 字符串倒置 字符串倒置.h
6.非定义式字符串常量转字符串数组
 int main()
{int i;char b[30];
    char *a="hello world";
    for (i=0;*a!='\0';a++,i++)
    { b[i]=*a;}
     b[i+1]='\0';
    return 0;}



 char str[]="hello"与char *a="hello world";的相同点和区别
 1.调用时完全一致，都可以使用%s输出整个字符串，都可以使用*或[ ]获取单个字符
 2.写入时完全不同，str[]是数组，可以自由修改数据
   a本质是指针变量，只能修改a指向的字符串的第几个元素，由于"hello"这样的字符串实质是常量，不能被修改
   所以不能改变指向变量的值




 */