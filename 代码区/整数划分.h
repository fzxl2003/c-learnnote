/*
 题目描述
所谓整数划分,是指把一个正整数 n 写成为 n=m1+m2+…+mi 的形式,其中 mi 为正整数,并且 1≤mi≤n ;则 m1,m2,…,mi 为 n 的一个划分。一个整数 n 可以有多个划分方案,如 n=5 时,划分方案有以下 7 种:
5=5    5=4+1   5=3+2   5=3+1+1   5=2+2+1   5=2+1+1+1   5=1+1+1+1+1
从标准输入上读入整数 n , n 为不大于 100 的正整数。编程求出并输出 n 共有多少种划分方案。注意:对于两种划分方案,当各个数及它们出现的次数(与出现顺序无关)对应相等, 称这两个方案相同。例如,当 n=5 时, 5=2+1+1+1 和 5=1+2+1+1 、5=1+1+2+1 都是同一个划分方案。

输入
多组数据,第一行为一个正整数 T(T<10) ,为数据的组数。接下来 T 行表示每组数据,每一行为一个正整数 n(0<n≤100) ,代表待划分的整数。

输出
对于每组数据输出一行,为一个整数,代表对于该组数据的划分方案数。

输入样例
2
5
9
输出样例
7
30
 */

#include <stdio.h>
long long jisuan(int n,int m)
{
    if (n==1||m==1) return 1;
    if(n<m) return jisuan(n,n);
    if (n==m) return 1+ jisuan(n,n-1);
    if (n>m) return jisuan(n,m-1)+ jisuan(n-m,m);

}
int main()
{
    int n;int t;
    scanf("%d",&t);
    while (t--)
    {
        scanf("%d",&n);
        long long sum= jisuan(n,n);
        printf("%lld\n",sum);
    }
}